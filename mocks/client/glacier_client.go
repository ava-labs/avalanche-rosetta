// Code generated by mockery v2.20.2. DO NOT EDIT.

package client

import (
	context "context"

	client "github.com/ava-labs/avalanche-rosetta/client"

	mock "github.com/stretchr/testify/mock"
)

// GlacierClient is an autogenerated mock type for the GlacierClient type
type GlacierClient struct {
	mock.Mock
}

// TransactionsListStaking provides a mock function with given fields: ctx, addresses
func (_m *GlacierClient) TransactionsListStaking(ctx context.Context, addresses string) ([]client.PChainTransaction, error) {
	ret := _m.Called(ctx, addresses)

	var r0 []client.PChainTransaction
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) ([]client.PChainTransaction, error)); ok {
		return rf(ctx, addresses)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) []client.PChainTransaction); ok {
		r0 = rf(ctx, addresses)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]client.PChainTransaction)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, addresses)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewGlacierClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewGlacierClient creates a new instance of GlacierClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGlacierClient(t mockConstructorTestingTNewGlacierClient) *GlacierClient {
	mock := &GlacierClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
